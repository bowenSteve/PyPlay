{"ast":null,"code":"var _jsxFileName = \"/home/bowen/Desktop/WEB-APPLICATIONS/PyPlay/client/src/components/Session.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Session({\n  questions\n}) {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(20);\n  const [selectedOption, setSelectedOption] = useState(null); // State to track selected option\n\n  // Effect to handle countdown timer\n  useEffect(() => {\n    if (timeLeft === 0) {\n      // Automatically move to the next question when time is up\n      handleNextQuestion();\n    }\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => prevTime > 0 ? prevTime - 1 : 0);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n\n  // Function to handle moving to the next question\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n      setTimeLeft(20); // Reset timer to 20 seconds for the next question\n      setSelectedOption(null); // Reset selected option for the new question\n    } else {\n      // Handle end of quiz logic here (e.g., show results or a completion message)\n      alert(\"Quiz complete!\");\n    }\n  };\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-3 position-relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Quiz Questions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-absolute top-0 end-0 p-3\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Time Left: \", timeLeft, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Question \", currentQuestionIndex + 1, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), \" \", currentQuestion.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, currentQuestion.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: `option-${option.id}`,\n          name: \"quizOptions\",\n          value: option.id,\n          className: \"form-check-input\",\n          checked: selectedOption === option.id,\n          onChange: () => setSelectedOption(option.id) // Set selected option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `option-${option.id}`,\n          className: \"form-check-label\",\n          children: option.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, option.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-end\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleNextQuestion,\n        disabled: selectedOption === null // Disable button if no option is selected\n        ,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Session, \"BwGxN10lWtN0C4g53IWxPjLMtIc=\");\n_c = Session;\nexport default Session;\nvar _c;\n$RefreshReg$(_c, \"Session\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Session","questions","_s","currentQuestionIndex","setCurrentQuestionIndex","timeLeft","setTimeLeft","selectedOption","setSelectedOption","handleNextQuestion","timer","setInterval","prevTime","clearInterval","length","prevIndex","alert","currentQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","text","id","options","map","option","type","name","value","checked","onChange","htmlFor","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/bowen/Desktop/WEB-APPLICATIONS/PyPlay/client/src/components/Session.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction Session({ questions }) {\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [timeLeft, setTimeLeft] = useState(20);\n    const [selectedOption, setSelectedOption] = useState(null); // State to track selected option\n\n    // Effect to handle countdown timer\n    useEffect(() => {\n        if (timeLeft === 0) {\n            // Automatically move to the next question when time is up\n            handleNextQuestion();\n        }\n\n        const timer = setInterval(() => {\n            setTimeLeft((prevTime) => (prevTime > 0 ? prevTime - 1 : 0));\n        }, 1000);\n\n        return () => clearInterval(timer);\n    }, [timeLeft]);\n\n    // Function to handle moving to the next question\n    const handleNextQuestion = () => {\n        if (currentQuestionIndex < questions.length - 1) {\n            setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\n            setTimeLeft(20);  // Reset timer to 20 seconds for the next question\n            setSelectedOption(null); // Reset selected option for the new question\n        } else {\n            // Handle end of quiz logic here (e.g., show results or a completion message)\n            alert(\"Quiz complete!\");\n        }\n    };\n\n    const currentQuestion = questions[currentQuestionIndex];\n\n    return (\n        <div className=\"container mt-3 position-relative\">\n            <h3>Quiz Questions:</h3>\n\n            {/* Countdown timer at the top right */}\n            <div className=\"position-absolute top-0 end-0 p-3\">\n                <h5>Time Left: {timeLeft}s</h5>\n            </div>\n\n            {/* Display the current question */}\n            <div key={currentQuestion.id} className=\"mb-3\">\n                <p>\n                    <strong>Question {currentQuestionIndex + 1}:</strong> {currentQuestion.text}\n                </p>\n            </div>\n\n            {/* Display the options */}\n            <div className=\"mb-3\">\n                {currentQuestion.options.map((option) => (\n                    <div key={option.id} className=\"form-check\">\n                        <input\n                            type=\"radio\"\n                            id={`option-${option.id}`}\n                            name=\"quizOptions\"\n                            value={option.id}\n                            className=\"form-check-input\"\n                            checked={selectedOption === option.id}\n                            onChange={() => setSelectedOption(option.id)} // Set selected option\n                        />\n                        <label htmlFor={`option-${option.id}`} className=\"form-check-label\">\n                            {option.text}\n                        </label>\n                    </div>\n                ))}\n            </div>\n\n            {/* Next button at the bottom right */}\n            <div className=\"d-flex justify-content-end\">\n                <button\n                    className=\"btn btn-primary\"\n                    onClick={handleNextQuestion}\n                    disabled={selectedOption === null} // Disable button if no option is selected\n                >\n                    Next\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default Session;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}