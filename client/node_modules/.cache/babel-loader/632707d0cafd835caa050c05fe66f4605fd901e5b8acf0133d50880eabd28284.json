{"ast":null,"code":"var _jsxFileName = \"/home/juma/Projects/PyPlay/client/src/components/QuestionCard.js\",\n  _s = $RefreshSig$();\nimport Navbar from \"./Navbar\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionCard() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const token = localStorage.getItem('accessToken');\n    fetch(`http://127.0.0.1:8000/quizapp/get_topics_id/${id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return res.json();\n    }).then(data => {\n      if (data.Questions.length === 0) {\n        setError(\"No questions available for this topic.\");\n      } else {\n        setQuestions(data.Questions);\n      }\n      setLoading(false);\n    }).catch(err => {\n      console.error(\"Error fetching questions:\", err);\n      setError(err.message);\n      setLoading(false);\n    });\n  }, [id]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: questions.length > 0 ? questions.map(question => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.text\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No questions available for this topic.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(QuestionCard, \"zMT9FBiFy2PMRReqgq0ZLkcrdJg=\", false, function () {\n  return [useParams];\n});\n_c = QuestionCard;\nexport default QuestionCard;\nvar _c;\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"names":["Navbar","useState","useEffect","useParams","jsxDEV","_jsxDEV","QuestionCard","_s","questions","setQuestions","loading","setLoading","error","setError","id","token","localStorage","getItem","fetch","method","headers","then","res","ok","Error","json","data","Questions","length","catch","err","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","question","text","_c","$RefreshReg$"],"sources":["/home/juma/Projects/PyPlay/client/src/components/QuestionCard.js"],"sourcesContent":["import Navbar from \"./Navbar\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nfunction QuestionCard() {\n    const [questions, setQuestions] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const { id } = useParams();\n\n    useEffect(() => {\n        const token = localStorage.getItem('accessToken');\n        fetch(`http://127.0.0.1:8000/quizapp/get_topics_id/${id}`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`,\n            },\n        })\n        .then(res => {\n            if (!res.ok) {\n                throw new Error('Network response was not ok');\n            }\n            return res.json();\n        })\n        .then(data => {\n            if (data.Questions.length === 0) {\n                setError(\"No questions available for this topic.\");\n            } else {\n                setQuestions(data.Questions);\n            }\n            setLoading(false);\n        })\n        .catch(err => {\n            console.error(\"Error fetching questions:\", err);\n            setError(err.message);\n            setLoading(false);\n        });\n    }, [id]);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error: {error}</p>;\n\n    return (\n        <div>\n            <Navbar />\n            <div className=\"container\">\n                {questions.length > 0 ? (\n                    questions.map(question => (\n                        <p key={question.id}>{question.text}</p>\n                    ))\n                ) : (\n                    <p>No questions available for this topic.</p>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default QuestionCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}