{"ast":null,"code":"var _jsxFileName = \"/home/bowen/Desktop/WEB-APPLICATIONS/PyPlay/client/src/components/QuestionCard.js\",\n  _s = $RefreshSig$();\nimport Navbar from \"./Navbar\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionCard() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedLevel, setSelectedLevel] = useState(\"beginner\"); // State for radio button selection\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const token = localStorage.getItem('accessToken');\n    fetch(`http://127.0.0.1:8000/quizapp/get_topics_id/${id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return res.json();\n    }).then(data => {\n      if (data.Questions.length === 0) {\n        setError(\"No questions available for this topic.\");\n      } else {\n        setQuestions(data.Questions);\n        console.log(data.Questions);\n      }\n      setLoading(false);\n    }).catch(err => {\n      console.error(\"Error fetching questions:\", err);\n      setError(err.message);\n      setLoading(false);\n    });\n  }, [id]);\n  const handleLevelChange = event => {\n    setSelectedLevel(event.target.value);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Level:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"levelOptions\",\n            id: \"beginner\",\n            value: \"beginner\",\n            checked: selectedLevel === \"beginner\",\n            onChange: handleLevelChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: \"beginner\",\n            children: \"Beginner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"levelOptions\",\n            id: \"intermediate\",\n            value: \"intermediate\",\n            checked: selectedLevel === \"intermediate\",\n            onChange: handleLevelChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: \"intermediate\",\n            children: \"Intermediate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"levelOptions\",\n            id: \"advanced\",\n            value: \"advanced\",\n            checked: selectedLevel === \"advanced\",\n            onChange: handleLevelChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: \"advanced\",\n            children: \"Advanced\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: questions.length > 0 ? questions.map(question => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.text\n        }, question.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No questions available for this topic.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(QuestionCard, \"mmPH0p0+ykchce1mkIdpph/C1Yo=\", false, function () {\n  return [useParams];\n});\n_c = QuestionCard;\nexport default QuestionCard;\nvar _c;\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"names":["Navbar","useState","useEffect","useParams","jsxDEV","_jsxDEV","QuestionCard","_s","questions","setQuestions","loading","setLoading","error","setError","selectedLevel","setSelectedLevel","id","token","localStorage","getItem","fetch","method","headers","then","res","ok","Error","json","data","Questions","length","console","log","catch","err","message","handleLevelChange","event","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","name","checked","onChange","htmlFor","map","question","text","_c","$RefreshReg$"],"sources":["/home/bowen/Desktop/WEB-APPLICATIONS/PyPlay/client/src/components/QuestionCard.js"],"sourcesContent":["import Navbar from \"./Navbar\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nfunction QuestionCard() {\n    const [questions, setQuestions] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [selectedLevel, setSelectedLevel] = useState(\"beginner\");  // State for radio button selection\n    const { id } = useParams();\n\n    useEffect(() => {\n        const token = localStorage.getItem('accessToken');\n        fetch(`http://127.0.0.1:8000/quizapp/get_topics_id/${id}`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`,\n            },\n        })\n        .then(res => {\n            if (!res.ok) {\n                throw new Error('Network response was not ok');\n            }\n            return res.json();\n        })\n        .then(data => {\n            if (data.Questions.length === 0) {\n                setError(\"No questions available for this topic.\");\n            } else {\n                setQuestions(data.Questions);\n                console.log(data.Questions);\n            }\n            setLoading(false);\n        })\n        .catch(err => {\n            console.error(\"Error fetching questions:\", err);\n            setError(err.message);\n            setLoading(false);\n        });\n    }, [id]);\n\n    const handleLevelChange = (event) => {\n        setSelectedLevel(event.target.value);\n    };\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error: {error}</p>;\n\n    return (\n        <div>\n            <Navbar />\n            <div className=\"container\">\n                <h3>Select Level:</h3>\n                <div className=\"form-group\">\n                    {/* Radio buttons for selecting level */}\n                    <div className=\"form-check form-check-inline\">\n                        <input \n                            className=\"form-check-input\" \n                            type=\"radio\" \n                            name=\"levelOptions\" \n                            id=\"beginner\" \n                            value=\"beginner\" \n                            checked={selectedLevel === \"beginner\"} \n                            onChange={handleLevelChange} \n                        />\n                        <label className=\"form-check-label\" htmlFor=\"beginner\">\n                            Beginner\n                        </label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                        <input \n                            className=\"form-check-input\" \n                            type=\"radio\" \n                            name=\"levelOptions\" \n                            id=\"intermediate\" \n                            value=\"intermediate\" \n                            checked={selectedLevel === \"intermediate\"} \n                            onChange={handleLevelChange} \n                        />\n                        <label className=\"form-check-label\" htmlFor=\"intermediate\">\n                            Intermediate\n                        </label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                        <input \n                            className=\"form-check-input\" \n                            type=\"radio\" \n                            name=\"levelOptions\" \n                            id=\"advanced\" \n                            value=\"advanced\" \n                            checked={selectedLevel === \"advanced\"} \n                            onChange={handleLevelChange} \n                        />\n                        <label className=\"form-check-label\" htmlFor=\"advanced\">\n                            Advanced\n                        </label>\n                    </div>\n                </div>\n\n                {/* Conditional rendering of questions */}\n                <div className=\"container\">\n                    {questions.length > 0 ? (\n                        questions.map(question => (\n                            <p key={question.id}>{question.text}</p>\n                        ))\n                    ) : (\n                        <p>No questions available for this topic.</p>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default QuestionCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}